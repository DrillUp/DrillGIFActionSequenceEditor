
	
◆基本原理：
	动画序列块的结构如下：
		动画序列块
			- 动作元块
			- 放映区
			- 默认的状态元集合
			- 状态节点块
			- 状态元块
		这些结构，都是描述c++编辑器控件，以及c++存储数据结构而定义的，所有数据都存放于S_ActionSeqDataContainer中。

	核心复刻类的结构如下：
		全局参数
			- 动画序列控制器
				- 状态节点控制器
					- 状态元控制器
				- 动作元控制器
		这些结构，是复刻于js插件中的结构，由于没有存储数据的容器，这里将Drill_COAS_Init作为单例全局容器来存储。

	【只有放映区，能直接操作 核心复刻类】
	【因此放映区出现的任何问题，都是 放映区+核心复刻类 合并所产生的 综合问题】
	

◆问题 - 为什么C_XXXPtr指针中存的中文，而Init中QJsonObject存的英文？
	这是因为编辑器与插件用的是两套数据。
	编辑器中用的全是 中文+字符串 数据。
	插件中通过Init自动转英文了，所以用的是 英文+转换后 的数据。
	考虑到编辑器的数据经常不小心就给英文混用了，这里专门在编辑器的数据类中标明了 getJsonObject_Chinese 。
	


◆问题 - 播放状态节点时会卡死
	这是【核心复刻类】的问题，注意参数都是英文。
	此问题经常出现，有下面两个情况：
		情况1： play_type没有成功赋值。（使用的默认的"随机播放状态元"）
				在编辑器中，如果配置了节点嵌套，只要播放那个节点，小爱丽丝图像就暂停，但是播放默认集合和状态元都没问题。
				这是因为随机播放状态元的列表为空，每次指向了空列表，就导致最终的BitmapName为空字符串。
		情况2： _drill_tarIndex没有成功赋值。（被赋值0）
				多留意一下控制器中的 drill_COAS_resetTimer 函数。
				经常会出现赋值失败，或者没赋值的问题。
				只要这个参数是0，那么就会陷入每次帧刷新都重新循环的死结。
					（在此处设置错误提示也不合适，因为最初打开软件，此参数也是0）


◆问题 - 修改某些名称后，数据没同步
◆问题 - 数据putDataToUi()的时机问题
	这是【动画序列块控件】的问题，注意参数都是中文。
	这里重新梳理一下控件块的结构：
		动画序列块（编辑动画序列列表）
			- 动作元块（编辑动作元列表）
			- 放映区
			- 默认的状态元集合（即时返回）
			- 状态节点块（编辑状态节点列表）
			- 状态元块（编辑状态元列表）
	在修改bug前，再思考一下当前所在的层级问题。
	大部分问题都集中在 放映区 不能正常数据同步，而放映区只针对当前的一个动画序列来操作。